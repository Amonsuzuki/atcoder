#include <bits/stdc++.h>
using namespace std;

#define INFTY 1000000001

void merge(int A[], int left, int mid, int right) {
  int i, j, k;
  int n1, n2;  // 部分列L, Rの要素数決定に利用
  
  n1 = mid - left;
  n2 = right - mid;
  
  int L[n1+1], R[n2+1];
  
  for (i = 0; i < n1; i++) L[i] = A[left + i];  
  for (i = 0; i < n2; i++) R[i] = A[mid + i];
  L[n1] = INFTY;
  R[n2] = INFTY;

  // sort
  j = 0;
  k = 0;
  for (i = left; i < right; i++) {
    if (L[j] <= R[k]) {
      A[i] = L[j];
      j++;
    } else {
      A[i] = R[k];
      k++;
    }
  }
}

void merge_sort(int A[], int left, int right) {
  if (left + 1 < right) {
    int mid;
    mid = (left + right) / 2;
    // devide
    merge_sort(A, left, mid);
    merge_sort(A, mid, right);
    // conquer
    merge(A, left, mid, right);
  }
}

int main() {
	int n;
	cin >> n;
//	vector<int> a(n);
	int a[50000];
	for (int i=1; i<n; i++) {
		cin >> a[i];
	}
	merge_sort(a, 0, n);
	for (int i=1; i<n+1; i++) {
		cout << a[i] << " ";
	}
	cout << endl;
}
